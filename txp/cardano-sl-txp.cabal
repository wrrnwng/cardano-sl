name:                cardano-sl-txp
version:             1.3.0
synopsis:            Cardano SL - transaction processing
description:         Cardano SL - transaction processing
license:             MIT
license-file:        LICENSE
author:              Serokell
maintainer:          hi@serokell.io
copyright:           2016 IOHK
category:            Currency
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  exposed-modules:
    Pos.Txp

    Pos.Txp.Configuration

    Pos.Txp.GenesisUtxo
    Pos.Txp.Toil
    Pos.Txp.Toil.Failure
    Pos.Txp.Toil.Logic
    Pos.Txp.Toil.Monad
    Pos.Txp.Toil.Stakes
    Pos.Txp.Toil.Types
    Pos.Txp.Toil.Utxo
    Pos.Txp.Toil.Utxo.Functions
    Pos.Txp.Toil.Utxo.Util

    Pos.Txp.Base
    Pos.Txp.Error
    Pos.Txp.Topsort

    Pos.Script
    Pos.Script.Examples

  build-depends:       aeson
                     , aeson-options
                     , base
                     , bytestring
                     , cardano-sl-binary
                     , cardano-sl-core
                     , cardano-sl-crypto
                     , cardano-sl-util
                     , conduit
                     , containers
                     , data-default
                     , ekg-core
                     , ether
                     , exceptions
                     , fmt >= 0.4
                     , formatting
                     , free
                     , hashable
                     , lens
                     , log-warper
                     , memory
                     , mmorph
                     , mtl
                     , neat-interpolation
                     , plutus-prototype
                     , resourcet
                     , rocksdb-haskell-ng
                     , safe-exceptions
                     , serokell-util
                     , stm
                     , reflection
                     , template-haskell
                     , text
                     , formatting
                     , transformers
                     , universum
                     , unliftio
                     , unordered-containers

  default-language:    Haskell2010

  default-extensions:  DeriveDataTypeable
                       DeriveGeneric
                       GeneralizedNewtypeDeriving
                       StandaloneDeriving
                       FlexibleContexts
                       FlexibleInstances
                       MultiParamTypeClasses
                       FunctionalDependencies
                       DefaultSignatures
                       NoImplicitPrelude
                       OverloadedStrings
                       RecordWildCards
                       TypeApplications
                       TupleSections
                       ViewPatterns
                       LambdaCase
                       MultiWayIf
                       ConstraintKinds
                       UndecidableInstances
                       BangPatterns
                       TemplateHaskell
                       ScopedTypeVariables
                       MonadFailDesugaring

  ghc-options:         -Wall
                       -O2

  build-tools: cpphs >= 1.19
  ghc-options: -pgmP cpphs -optP --cpp

test-suite test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Test.hs
  other-modules:       Test.Pos.Txp.CoreSpec
                       Test.Pos.Txp.Toil.UtxoSpec
  build-depends:       base
                     , cardano-sl-core
                     , cardano-sl-core-test
                     , cardano-sl-crypto
                     , cardano-sl-txp
                     , cardano-sl-util
                     , cardano-sl-util-test
                     , containers
                     , fmt
                     , hspec
                     , lens
                     , mtl
                     , QuickCheck
                     , serokell-util
                     , formatting
                     , universum
                     , unordered-containers
                     , vector
  default-language:    Haskell2010
  default-extensions:  DeriveDataTypeable
                       DeriveGeneric
                       GeneralizedNewtypeDeriving
                       StandaloneDeriving
                       FlexibleContexts
                       FlexibleInstances
                       MultiParamTypeClasses
                       FunctionalDependencies
                       DefaultSignatures
                       NoImplicitPrelude
                       OverloadedStrings
                       RecordWildCards
                       TypeApplications
                       TupleSections
                       ViewPatterns
                       LambdaCase
                       MultiWayIf
                       ConstraintKinds
                       UndecidableInstances
                       BangPatterns
                       TemplateHaskell
                       ScopedTypeVariables
                       MonadFailDesugaring
